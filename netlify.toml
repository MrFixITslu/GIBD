[build]
command = "npm ci --legacy-peer-deps && npm run build"
publish = "dist"
functions = "netlify/functions"

# Security headers
[[headers]]
for = "/*"
[headers.values]
Referrer-Policy = "strict-origin-when-cross-origin"
X-Content-Type-Options = "nosniff"
X-Frame-Options = "DENY"
X-XSS-Protection = "1; mode=block"

# Cache control for assets
[[headers]]
for = "/assets/*"
[headers.values]
Cache-Control = "public, max-age=31536000, immutable"

# Cache control for HTML
[[headers]]
for = "/index.html"
[headers.values]
Cache-Control = "public, max-age=0, must-revalidate"

# API redirects to functions
[[redirects]]
from = "/api/auth/login"
to = "/.netlify/functions/auth-login"
status = 200

[[redirects]]
from = "/api/auth/register"
to = "/.netlify/functions/auth-register"
status = 200

[[redirects]]
from = "/api/businesses"
to = "/.netlify/functions/businesses-get"
status = 200
conditions = {Method = ["GET"]}

[[redirects]]
from = "/api/businesses"
to = "/.netlify/functions/businesses-create"
status = 200
conditions = {Method = ["POST"]}

[[redirects]]
from = "/api/businesses/:id"
to = "/.netlify/functions/businesses-update"
status = 200
conditions = {Method = ["PUT"]}

[[redirects]]
from = "/api/businesses/:id/vote"
to = "/.netlify/functions/businesses-vote"
status = 200

[[redirects]]
from = "/api/events"
to = "/.netlify/functions/events-get"
status = 200
conditions = {Method = ["GET"]}

[[redirects]]
from = "/api/events"
to = "/.netlify/functions/events-create"
status = 200
conditions = {Method = ["POST"]}

[[redirects]]
from = "/api/events/:id"
to = "/.netlify/functions/events-delete"
status = 200
conditions = {Method = ["DELETE"]}

[[redirects]]
from = "/api/health-check"
to = "/.netlify/functions/health-check"
status = 200

[[redirects]]
from = "/api/debug"
to = "/.netlify/functions/debug"
status = 200

# SPA fallback
[[redirects]]
from = "/*"
to = "/index.html"
status = 200

# CRITICAL: Configure secrets scanning to ignore safe files
[build.environment]
# Omit paths that contain documentation and examples
SECRETS_SCAN_OMIT_PATHS = "*.md,env.*,backup/*,dist/*,node_modules/*,.netlify/*,package-lock.json,*.sql,Dockerfile,.gitignore,.dockerignore"

# Omit common environment variable names that appear in docs
SECRETS_SCAN_OMIT_KEYS = "NODE_ENV,LOG_LEVEL,API_KEY,PORT,RATE_LIMIT_WINDOW_MS,DATABASE_URL"